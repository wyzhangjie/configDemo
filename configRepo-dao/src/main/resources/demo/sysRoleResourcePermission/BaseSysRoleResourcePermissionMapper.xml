<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.framework.demo.sys.sysRoleResourcePermission.dao.SysRoleResourcePermissionMapper">
  <resultMap id="BaseResultMap" type="com.framework.demo.sys.sysRoleResourcePermission.bo.SysRoleResourcePermission">
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="role_id" property="roleId" jdbcType="BIGINT" />
    <result column="resource_id" property="resourceId" jdbcType="BIGINT" />
    <result column="permission_ids" property="permissionIds" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List">
    `id`, `role_id`, `resource_id`, `permission_ids`
  </sql>
  <insert id="insert" parameterType="com.framework.demo.sys.sysRoleResourcePermission.bo.SysRoleResourcePermission" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
    insert into `sys_role_resource_permission` (`role_id`, `resource_id`, `permission_ids`
      )
    values (#{roleId,jdbcType=BIGINT}, #{resourceId,jdbcType=BIGINT}, #{permissionIds,jdbcType=VARCHAR}
      )
    ]]>
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
    insert into `sys_role_resource_permission` (`role_id`, `resource_id`, `permission_ids`
      )
     values 
    <foreach collection="list" item="item" index="index" separator=",">
       (#{item.roleId,jdbcType=BIGINT}, #{item.resourceId,jdbcType=BIGINT}, #{item.permissionIds,jdbcType=VARCHAR}
        )
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.framework.demo.sys.sysRoleResourcePermission.bo.SysRoleResourcePermission" useGeneratedKeys="true" keyProperty="id">
    insert into `sys_role_resource_permission`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        `role_id`,
      </if>
      <if test="resourceId != null">
        `resource_id`,
      </if>
      <if test="permissionIds != null">
        `permission_ids`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="resourceId != null">
        #{resourceId,jdbcType=BIGINT},
      </if>
      <if test="permissionIds != null">
        #{permissionIds,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from `sys_role_resource_permission`
    where `id` = #{id,jdbcType=BIGINT}
  </delete>
  <select id="selectAll" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `sys_role_resource_permission`
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `sys_role_resource_permission`
    where `id` = #{id,jdbcType=BIGINT}
  </select>
  <select id="count" resultType="java.lang.Integer">
    select count(*) from `sys_role_resource_permission`
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.framework.demo.sys.sysRoleResourcePermission.bo.SysRoleResourcePermission">
    update `sys_role_resource_permission`
    <set>
      <if test="roleId != null">
        `role_id` = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="resourceId != null">
        `resource_id` = #{resourceId,jdbcType=BIGINT},
      </if>
      <if test="permissionIds != null">
        `permission_ids` = #{permissionIds,jdbcType=VARCHAR},
      </if>
    </set>
    where `id` = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.framework.demo.sys.sysRoleResourcePermission.bo.SysRoleResourcePermission">
    update `sys_role_resource_permission`
    set `role_id` = #{roleId,jdbcType=BIGINT},
      `resource_id` = #{resourceId,jdbcType=BIGINT},
      `permission_ids` = #{permissionIds,jdbcType=VARCHAR}
    where `id` = #{id,jdbcType=BIGINT}
  </update>
</mapper>