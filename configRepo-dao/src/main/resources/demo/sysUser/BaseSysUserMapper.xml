<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.framework.demo.dao.sysUser.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.framework.demo.bo.sysUser.SysUser">
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="mobile_phone_number" property="mobilePhoneNumber" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="deleted" property="deleted" jdbcType="BIT" />
    <result column="admin" property="admin" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List">
    `id`, `username`, `email`, `mobile_phone_number`, `password`, `salt`, `create_date`, `status`, `deleted`, `admin`
  </sql>
  <insert id="insert" parameterType="com.framework.demo.bo.sysUser.SysUser" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
    insert into `sys_user` (`username`, `email`, `mobile_phone_number`, 
      `password`, `salt`, `create_date`, 
      `status`, `deleted`, `admin`)
    values (#{username,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{mobilePhoneNumber,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=VARCHAR}, #{deleted,jdbcType=BIT}, #{admin,jdbcType=BIT})
    ]]>
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
    insert into `sys_user` (`username`, `email`, `mobile_phone_number`, 
      `password`, `salt`, `create_date`, 
      `status`, `deleted`, `admin`
      )
     values 
    <foreach collection="list" item="item" index="index" separator=",">
       (#{item.username,jdbcType=VARCHAR}, #{item.email,jdbcType=VARCHAR}, #{item.mobilePhoneNumber,jdbcType=VARCHAR}, 
        #{item.password,jdbcType=VARCHAR}, #{item.salt,jdbcType=VARCHAR}, #{item.createDate,jdbcType=TIMESTAMP}, 
        #{item.status,jdbcType=VARCHAR}, #{item.deleted,jdbcType=BIT}, #{item.admin,jdbcType=BIT}
        )
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.framework.demo.bo.sysUser.SysUser" useGeneratedKeys="true" keyProperty="id">
    insert into `sys_user`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        `username`,
      </if>
      <if test="email != null">
        `email`,
      </if>
      <if test="mobilePhoneNumber != null">
        `mobile_phone_number`,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="salt != null">
        `salt`,
      </if>
      <if test="createDate != null">
        `create_date`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="deleted != null">
        `deleted`,
      </if>
      <if test="admin != null">
        `admin`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobilePhoneNumber != null">
        #{mobilePhoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
      <if test="admin != null">
        #{admin,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from `sys_user`
    where `id` = #{id,jdbcType=BIGINT}
  </delete>
  <select id="selectAll" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `sys_user`
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `sys_user`
    where `id` = #{id,jdbcType=BIGINT}
  </select>
  <select id="count" resultType="java.lang.Integer">
    select count(*) from `sys_user`
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.framework.demo.bo.sysUser.SysUser">
    update `sys_user`
    <set>
      <if test="username != null">
        `username` = #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        `email` = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobilePhoneNumber != null">
        `mobile_phone_number` = #{mobilePhoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        `salt` = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        `create_date` = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        `deleted` = #{deleted,jdbcType=BIT},
      </if>
      <if test="admin != null">
        `admin` = #{admin,jdbcType=BIT},
      </if>
    </set>
    where `id` = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.framework.demo.bo.sysUser.SysUser">
    update `sys_user`
    set `username` = #{username,jdbcType=VARCHAR},
      `email` = #{email,jdbcType=VARCHAR},
      `mobile_phone_number` = #{mobilePhoneNumber,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      `salt` = #{salt,jdbcType=VARCHAR},
      `create_date` = #{createDate,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=VARCHAR},
      `deleted` = #{deleted,jdbcType=BIT},
      `admin` = #{admin,jdbcType=BIT}
    where `id` = #{id,jdbcType=BIGINT}
  </update>
</mapper>